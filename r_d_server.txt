import socket

def start_server():
    host, port = "127.0.0.1", 9999
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((host, port))
    server.listen(1)
    print(f"--- RSA Public Key Server started on {host}:{port} ---")
    print("Waiting for a connection...")

    client, addr = server.accept()
    print(f"\nConnection established from {addr}.")
    
    try:
        # These are the public RSA parameters the server will broadcast.
        # The modulus n is small enough to be factored easily.
        public_exponent_e = 17
        modulus_n = 187
        
        # The server sends its public key as a string "e,n"
        message_to_send = f"{public_exponent_e},{modulus_n}"
        client.sendall(message_to_send.encode('utf-8'))
        print(f"Broadcasted public key (e={public_exponent_e}, n={modulus_n}) to the client.")
        
    except Exception as e:
        print(f"An error occurred: {e}")
    finally:
        print("-> Closing sockets.")
        client.close()
        server.close()

if __name__ == "__main__":
    start_server()